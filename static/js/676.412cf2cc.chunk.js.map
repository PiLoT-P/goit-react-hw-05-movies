{"version":3,"file":"static/js/676.412cf2cc.chunk.js","mappings":"oOAgBA,EAhBsB,SAAC,GAAa,IAAZA,EAAW,EAAXA,MACpB,OACI,+BACI,wBACKA,EAAMC,KAAI,SAACC,GAAD,OACP,2BACI,gBAAKC,MAAM,QAAQC,IAAK,0CAA0CF,EAAKG,aAAcC,IAAI,YACzF,uBAAIJ,EAAKK,QACT,uBAAIL,EAAKM,cAHJN,EAAKO,GADP,OAU1B,ECMD,EAfkB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAwBN,GACnBO,MAAK,SAACC,GAAD,OAAUJ,EAAaI,EAAKC,KAA5B,IACLC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,EAAvB,GACd,GAAC,CAACX,KAGC,SAAC,EAAD,CAAeV,MAAOa,GAE7B,C,oKChBKW,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAoB,WAC7B,OAAOD,EAAAA,EAAAA,IACE,oBAAqB,CACtBE,OAAQ,CACJC,QAASJ,KAGhBP,MAAK,SAACY,GAAD,OAASA,EAAIX,IAAb,GACb,EAEYY,EAAwB,SAACrB,GAClC,OAAOgB,EAAAA,EAAAA,IACE,UAAUhB,EAAI,CACfkB,OAAQ,CACJC,QAASJ,KAGhBP,MAAK,SAACY,GAAD,OAASA,EAAIX,IAAb,GACb,EAEYa,EAA0B,SAACxB,GACpC,OAAOkB,EAAAA,EAAAA,IACE,gBAAiB,CAClBE,OAAQ,CACJC,QAASJ,EACTQ,MAAOzB,KAGdU,MAAK,SAACY,GAAD,OAASA,EAAIX,IAAb,GACb,EAEYF,EAA0B,SAACP,GACpC,OAAOgB,EAAAA,EAAAA,IACE,UAAUhB,EAAG,WAAY,CAC1BkB,OAAQ,CACJC,QAASJ,KAGhBP,MAAK,SAACY,GAAD,OAASA,EAAIX,IAAb,GACb,EAEYe,EAA6B,SAACxB,GACvC,OAAOgB,EAAAA,EAAAA,IACE,UAAUhB,EAAG,WAAY,CAC1BkB,OAAQ,CACJC,QAASJ,KAGhBP,MAAK,SAACY,GAAD,OAASA,EAAIX,IAAb,GACb,C","sources":["components/MoviCastList/MovieCastList.jsx","components/MovieCast/MovieCast.jsx","services/MoviesData.js"],"sourcesContent":["const MovieCastList = ({casts}) => {\n    return (\n        <>\n            <ul>\n                {casts.map((item) => (\n                    <li key={item.id}>\n                        <img width='120px' src={'https://www.themoviedb.org/t/p/original'+item.profile_path} alt=\"Avater\" />\n                        <p>{item.name}</p>\n                        <p>{item.character}</p>\n                    </li>\n                ))}\n            </ul>\n        </>\n    );\n}\n\nexport default MovieCastList;","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getTrendingMoviesByCast } from \"services/MoviesData\";\nimport MovieCastList from \"components/MoviCastList/MovieCastList\";\n\nconst MovieCast = () => {\n    const { movieID } = useParams();\n    const [movieCast, setMovieCast] = useState([]);\n\n    useEffect(() => {\n        getTrendingMoviesByCast(movieID)\n            .then((data) => setMovieCast(data.cast))\n            .catch((error) => console.log(error));\n    },[movieID])\n\n    return (\n        <MovieCastList casts={movieCast} />\n    );\n};\n\nexport default MovieCast;","import axios from \"axios\";\n\nconst API_KEY = 'bdc42118597db190ea765e4758333984';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = () => {\n    return axios\n        .get('/trending/all/day', {\n            params: {\n                api_key: API_KEY,\n            },\n        })\n        .then((res) => res.data);\n}\n\nexport const getTrendingMoviesByID = (id) => {\n    return axios\n        .get('/movie/'+id, {\n            params: {\n                api_key: API_KEY,\n            },\n        })\n        .then((res) => res.data);\n}\n\nexport const getTrendingMoviesByName = (name) => {\n    return axios\n        .get('/search/movie', {\n            params: {\n                api_key: API_KEY,\n                query: name,\n            },\n        })\n        .then((res) => res.data);\n}\n\nexport const getTrendingMoviesByCast = (id) => {\n    return axios\n        .get('/movie/'+id+'/credits', {\n            params: {\n                api_key: API_KEY,\n            },\n        })\n        .then((res) => res.data);\n}\n\nexport const getTrendingMoviesByReviews = (id) => {\n    return axios\n        .get('/movie/'+id+'/reviews', {\n            params: {\n                api_key: API_KEY,\n            },\n        })\n        .then((res) => res.data);\n}"],"names":["casts","map","item","width","src","profile_path","alt","name","character","id","movieID","useParams","useState","movieCast","setMovieCast","useEffect","getTrendingMoviesByCast","then","data","cast","catch","error","console","log","API_KEY","axios","getTrendingMovies","params","api_key","res","getTrendingMoviesByID","getTrendingMoviesByName","query","getTrendingMoviesByReviews"],"sourceRoot":""}